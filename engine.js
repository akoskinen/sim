const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d");let currentTrack=trackConfigs.speedTrack,buoyPixels=[],buoys=[],timingLine={x1:0,y1:0,x2:0,y2:0};function computeBuoys(){buoyPixels=currentTrack.buoys.map((e=>({x:e.x*currentTrack.scale,y:canvas.height-e.y*currentTrack.scale})));const e=buoyPixels.reduce(((e,t)=>({x:e.x+t.x,y:e.y+t.y})),{x:0,y:0});e.x/=buoyPixels.length,e.y/=buoyPixels.length;const t=canvas.width/2-e.x,a=canvas.height/2-e.y;buoys=buoyPixels.map((e=>({x:e.x+t,y:e.y+a}))),timingLine=currentTrack.computeTimingLine(buoys,canvas)}const windAudio=document.getElementById("windAudio"),musicAudio=document.getElementById("musicAudio"),boomStopAudio=document.getElementById("boomStopAudio"),collisionAudio=document.getElementById("collisionAudio");function fadeOutMusic(){if(!musicAudio.paused){let e=1;const t=50,a=5e3/t,n=1/t;!function t(){e=Math.max(0,e-n),musicAudio.volume=e,e>0?setTimeout(t,a):(musicAudio.pause(),musicAudio.currentTime=0,musicAudio.volume=1)}()}}function enableAudio(){windAudio.play().catch((e=>console.warn("Wind audio failed",e))),document.removeEventListener("keydown",enableAudio)}function resizeCanvas(){canvas.width=window.innerWidth,canvas.height=window.innerHeight,computeBuoys()}musicAudio.loop=!0,document.addEventListener("keydown",enableAudio,{once:!0}),window.addEventListener("resize",resizeCanvas);const trackRadios=document.querySelectorAll('input[name="track"]');trackRadios.forEach((e=>{e.addEventListener("change",(function(){this.checked&&(currentTrack=trackConfigs[this.value],computeBuoys())}))}));const maxSpeed=100,timeToMaxSpeed=18,accelRate=maxSpeed/18,decelRate=12.333,speedConversion=.6,speedScale=.837,BANK_ANGLE_MAX=55,bankRate0to30=40,bankRate30to55=10;let bankAngleDeg=0;const bankDecay=.9;function updateBankAngle(e){let t=0;if(keys.ArrowLeft&&(t=-1),keys.ArrowRight&&(t=1),0!==t){let a=Math.abs(bankAngleDeg),n=Math.sign(bankAngleDeg);0===n&&(n=t),n!==t&&(a=0,bankAngleDeg=0,n=t),a+=(a<30?bankRate0to30:bankRate30to55)*e,a>BANK_ANGLE_MAX&&(a=BANK_ANGLE_MAX),bankAngleDeg=n*a}else if(Math.abs(bankAngleDeg)<.5)bankAngleDeg=0;else{const t=Math.pow(bankDecay,60*e);bankAngleDeg*=t,Math.abs(bankAngleDeg)<.05&&(bankAngleDeg=0)}}const baseline30Data=[{speed:10,radius:10},{speed:15,radius:15},{speed:30,radius:30},{speed:40,radius:65},{speed:60,radius:80}],reduceData=[{speed:10,factor:.85},{speed:15,factor:.82},{speed:30,factor:.83},{speed:40,factor:.85},{speed:60,factor:.9}];function interpPiecewise(e,t){let a=Math.max(10,Math.min(60,t));for(let t=1;t<e.length;t++){const n=e[t-1],o=e[t];if(a>=n.speed&&a<=o.speed){const e=o.speed-n.speed,t=(a-n.speed)/e,i=void 0!==n.radius?n.radius:n.factor;return i+((void 0!==o.radius?o.radius:o.factor)-i)*t}}if(a<=e[0].speed)return void 0!==e[0].radius?e[0].radius:e[0].factor;const n=e[e.length-1];return void 0!==n.radius?n.radius:n.factor}function getTurnRadius(e,t){let a=Math.max(0,Math.min(55,t));const n=interpPiecewise(baseline30Data,e),o=n*interpPiecewise(reduceData,e);if(a<30){const e=5e3;return e+a/30*(n-e)}if(a<=50){return n+(a-30)/20*(o-n)}return o}const turnGain=15,lowFactor=.02084;let heading=0,speed=0;const pos={x:0,y:0};let oldPos={x:0,y:0},lapActive=!1,lapStartTime=0,currentLapTime=0;const laps=[];let distanceTraveled=0,topSpeedKmh=0,minSpeedKmh=1/0,sumSpeeds=0,frameCount=0,lastPosTelemetry={x:0,y:0},collidedThisLap=!1,penaltySeconds=0,ghostData=null,recordedGhost=[];function recordGhostData(e){lapActive&&recordedGhost.push({time:e,x:pos.x,y:pos.y,heading:heading})}function getGhostPosition(e){if(!ghostData||0===ghostData.length)return null;for(let t=1;t<ghostData.length;t++){const a=ghostData[t-1],n=ghostData[t];if(a.time<=e&&n.time>=e){const t=(e-a.time)/(n.time-a.time);return{x:a.x+t*(n.x-a.x),y:a.y+t*(n.y-a.y),heading:a.heading+t*(n.heading-a.heading)}}}const t=ghostData[ghostData.length-1];return e>t.time?t:ghostData[0]}function drawGhost(e){if(!lapActive||!ghostData)return;const t=getGhostPosition(e);t&&(ctx.save(),ctx.globalAlpha=.25,ctx.translate(t.x,t.y),ctx.rotate(t.heading-Math.PI/2),ctx.beginPath(),ctx.moveTo(0,12.5),ctx.bezierCurveTo(4,7.5,4,-7.5,0,-12.5),ctx.bezierCurveTo(-4,-7.5,-4,7.5,0,12.5),ctx.closePath(),ctx.fillStyle="#ff88ff",ctx.fill(),ctx.restore(),ctx.globalAlpha=1)}function startLap(){lapStartTime=performance.now(),currentLapTime=0,lapActive=!0,distanceTraveled=0,topSpeedKmh=0,minSpeedKmh=1/0,sumSpeeds=0,frameCount=0,lastPosTelemetry.x=pos.x,lastPosTelemetry.y=pos.y,collidedThisLap=!1,penaltySeconds=0,recordedGhost=[]}function finalizeLap(){lapActive=!1;const e=(performance.now()-lapStartTime)/1e3;currentLapTime=e+penaltySeconds;const t=frameCount>0?sumSpeeds/frameCount:0;laps.unshift({topSpeed:topSpeedKmh,minSpeed:minSpeedKmh===1/0?0:minSpeedKmh,avgSpeed:t,distance:distanceTraveled,finalTime:currentLapTime}),laps.length>4&&laps.pop(),ghostData=recordedGhost.slice()}const keys={};function orientation(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}function linesIntersect(e,t,a,n,o,i,s,c){const l={x:e,y:t},r={x:a,y:n},d={x:o,y:i},p={x:s,y:c},u=orientation(l,r,d),m=orientation(l,r,p),h=orientation(d,p,l),x=orientation(d,p,r);return(u>0&&m<0||u<0&&m>0)&&(h>0&&x<0||h<0&&x>0)}function checkLapCrossing(){0!==pos.x&&pos.x!==canvas.width&&0!==pos.y&&pos.y!==canvas.height&&linesIntersect(oldPos.x,oldPos.y,pos.x,pos.y,timingLine.x1,timingLine.y1,timingLine.x2,timingLine.y2)&&(lapActive?(finalizeLap(),boomStopAudio.currentTime=0,boomStopAudio.play().catch((e=>console.warn("Boom stop fail",e))),fadeOutMusic()):(startLap(),musicAudio.volume=1,musicAudio.currentTime=0,musicAudio.play().catch((e=>console.warn("Music play fail",e)))))}function checkBuoyCollisions(){if(lapActive&&!collidedThisLap)for(const e of buoys){const t=e.x-pos.x,a=e.y-pos.y;if(Math.hypot(t,a)<12){penaltySeconds+=10,collidedThisLap=!0,collisionAudio.currentTime=0,collisionAudio.play().catch((e=>console.warn("Collision audio fail",e)));break}}}function update(e){oldPos.x=pos.x,oldPos.y=pos.y,keys.ArrowUp&&(speed+=accelRate*e),keys.ArrowDown&&(speed-=decelRate*e),speed=Math.max(0,Math.min(maxSpeed,speed)),updateBankAngle(e);const t=speed*speedConversion,a=getTurnRadius(t,Math.abs(bankAngleDeg)),n=bankAngleDeg*Math.PI/180,o=Math.sign(bankAngleDeg)*(Math.abs(n)*turnGain)*(1/a+lowFactor);heading+=o*e,pos.x+=speed*speedScale*e*Math.cos(heading),pos.y+=speed*speedScale*e*Math.sin(heading);let i=!1;if(pos.x>canvas.width?(pos.x=0,i=!0):pos.x<0&&(pos.x=canvas.width,i=!0),pos.y>canvas.height?(pos.y=0,i=!0):pos.y<0&&(pos.y=canvas.height,i=!0),windAudio.volume=speed/maxSpeed,document.getElementById("speedDisplay").innerText=`Speed: ${t.toFixed(1)} km/h`,document.getElementById("bankAngleDisplay").innerText=`Bank: ${bankAngleDeg.toFixed(0)}Â°`,i||checkLapCrossing(),lapActive){t>topSpeedKmh&&(topSpeedKmh=t),t<minSpeedKmh&&(minSpeedKmh=t),sumSpeeds+=t,frameCount++;const e=pos.x-lastPosTelemetry.x,a=pos.y-lastPosTelemetry.y,n=Math.hypot(e,a)/currentTrack.scale;distanceTraveled+=n,lastPosTelemetry.x=pos.x,lastPosTelemetry.y=pos.y,checkBuoyCollisions();const o=(performance.now()-lapStartTime)/1e3;recordGhostData(o);const i=o+penaltySeconds;document.getElementById("lapTimeDisplay").innerText=penaltySeconds>0&&collidedThisLap?`Laptime: ${i.toFixed(2)} (- ${penaltySeconds}s penalty!)`:`Laptime: ${i.toFixed(2)}`}else document.getElementById("lapTimeDisplay").innerText=penaltySeconds>0?`Laptime: ${currentLapTime.toFixed(2)} (- ${penaltySeconds}s penalty!)`:`Laptime: ${currentLapTime.toFixed(2)}`}document.addEventListener("keydown",(e=>{keys[e.key]=!0})),document.addEventListener("keyup",(e=>{keys[e.key]=!1}));let wakeTrail=[];function totalTrailDistance(e){let t=0;for(let a=1;a<e.length;a++)t+=Math.hypot(e[a].x-e[a-1].x,e[a].y-e[a-1].y);return t}function drawWake(){if(!(wakeTrail.length<2))for(let e=1;e<wakeTrail.length;e++){const t=e/wakeTrail.length;ctx.beginPath(),ctx.moveTo(wakeTrail[e-1].x,wakeTrail[e-1].y),ctx.lineTo(wakeTrail[e].x,wakeTrail[e].y),ctx.strokeStyle=`rgba(255,255,255,${t.toFixed(2)})`,ctx.lineWidth=2,ctx.stroke()}}function drawTrack(){buoys.forEach((e=>{ctx.beginPath(),ctx.arc(e.x,e.y,8,0,2*Math.PI),ctx.fillStyle="#FFFF00",ctx.fill(),ctx.lineWidth=2,ctx.strokeStyle="#fff",ctx.stroke()})),ctx.beginPath(),ctx.moveTo(timingLine.x1,timingLine.y1),ctx.lineTo(timingLine.x2,timingLine.y2),ctx.strokeStyle="red",ctx.lineWidth=1,ctx.stroke()}function drawTelemetry(){ctx.save(),ctx.font="14px monospace",ctx.fillStyle="#fff";let e=20,t=50;ctx.fillText("Telemetry:",e,t),t+=20,laps.forEach(((a,n)=>{ctx.fillText(`Lap ${n+1}:`,e,t),t+=18,ctx.fillText(`  Time:   ${a.finalTime.toFixed(2)} s`,e,t),t+=18,ctx.fillText(`  Dist:   ${a.distance.toFixed(1)} m`,e,t),t+=18,ctx.fillText(`  TopSpd: ${a.topSpeed.toFixed(1)} km/h`,e,t),t+=18,ctx.fillText(`  MinSpd: ${a.minSpeed.toFixed(1)} km/h`,e,t),t+=18,ctx.fillText(`  AvgSpd: ${a.avgSpeed.toFixed(1)} km/h`,e,t),t+=24})),ctx.restore()}function drawRacer(){ctx.save(),ctx.translate(pos.x,pos.y),ctx.rotate(heading-Math.PI/2),ctx.beginPath(),ctx.moveTo(0,12.5),ctx.bezierCurveTo(4,7.5,4,-7.5,0,-12.5),ctx.bezierCurveTo(-4,-7.5,-4,7.5,0,12.5),ctx.closePath(),ctx.fillStyle="#00ccff",ctx.fill(),ctx.restore()}function drawGhostFrame(){if(lapActive){drawGhost((performance.now()-lapStartTime)/1e3)}else drawGhost(currentLapTime)}let lastTimestamp=0;function gameLoop(e){lastTimestamp||(lastTimestamp=e);let t=(e-lastTimestamp)/1e3;lastTimestamp=e,t>.1&&(t=.1),wakeTrail.push({x:pos.x,y:pos.y});const a=speed/maxSpeed*200;for(;wakeTrail.length>1&&totalTrailDistance(wakeTrail)>a;)wakeTrail.shift();update(t),ctx.clearRect(0,0,canvas.width,canvas.height),ctx.fillStyle="#222",ctx.fillRect(0,0,canvas.width,canvas.height),drawTrack(),drawWake(),drawGhostFrame(),drawRacer(),drawTelemetry(),requestAnimationFrame(gameLoop)}const exportGhostBtn=document.getElementById("exportGhostBtn"),importGhostFile=document.getElementById("importGhostFile"),clearGhostBtn=document.getElementById("clearGhostBtn");exportGhostBtn.addEventListener("click",(()=>{if(!ghostData||0===ghostData.length)return void alert("No ghost data to export yet. Complete at least one lap.");const e=JSON.stringify(ghostData),t=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(t),n=document.createElement("a");n.href=a,n.download="lapData.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(a)})),importGhostFile.addEventListener("change",(async e=>{const t=e.target.files[0];if(t)try{const e=await t.text(),a=JSON.parse(e);Array.isArray(a)&&a.length>0?(ghostData=a,alert("Ghost data imported successfully! It will appear on your next lap.")):alert("Invalid ghost data file.")}catch(e){alert("Failed to read file: "+e)}})),clearGhostBtn.addEventListener("click",(()=>{ghostData=null,alert("Ghost data cleared.")})),resizeCanvas(),pos.x=canvas.width/2,pos.y=canvas.height/2,requestAnimationFrame(gameLoop);
